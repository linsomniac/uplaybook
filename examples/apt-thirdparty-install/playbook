#!/usr/bin/env python3

"""
Install third-party software via apt.

This adds third party repositories to a system and installs the software.
Run without any arguments to get a list of packages.
"""

from uplaybook import fs, core, pyinfra, ARGS
import sys

core.playbook_args(
    core.Argument(
        name="package-name", description="Name of the package to install.", default=None
    ),
)

packages = {
    "aws-corretto-8": {
        "desc": "Amazon Corretto Java 8",
        "key_url": "https://apt.corretto.aws/corretto.key",
        "sources": "deb https://apt.corretto.aws stable main",
        "package_name": "java-8-amazon-corretto-jdk",
    },
    "aws-corretto-11": {
        "desc": "Amazon Corretto Java 11",
        "key_url": "https://apt.corretto.aws/corretto.key",
        "sources": "deb https://apt.corretto.aws stable main",
        "package_name": "java-11-amazon-corretto-jdk",
    },
    "aws-corretto-17": {
        "desc": "Amazon Corretto Java 17",
        "key_url": "https://apt.corretto.aws/corretto.key",
        "sources": "deb https://apt.corretto.aws stable main",
        "package_name": "java-17-amazon-corretto-jdk",
    },
    "aws-corretto-21": {
        "desc": "Amazon Corretto Java 21",
        "key_url": "https://apt.corretto.aws/corretto.key",
        "sources": "deb https://apt.corretto.aws stable main",
        "package_name": "java-21-amazon-corretto-jdk",
    },
    "neovim-stable": {
        "desc": "Neovim PPA, Stable Channel",
        "key_url": "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x9dbb0be9366964f134855e2255f96fcf8231b6dd",
        "sources": "deb https://ppa.launchpadcontent.net/neovim-ppa/stable/ubuntu {{ platform.release_codename }} main",
        "package_name": "neovim",
    },
    "neovim-unstable": {
        "desc": "Neovim PPA, Unstable Channel",
        "key_url": "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x9dbb0be9366964f134855e2255f96fcf8231b6dd",
        "sources": "deb https://ppa.launchpadcontent.net/neovim-ppa/ustable/ubuntu {{ platform.release_codename }} main",
        "package_name": "neovim",
    },
    "docker": {
        "desc": "Docker from docker.com",
        "key_url": "https://download.docker.com/linux/ubuntu/gpg",
        "sources": "deb [arch={{dpkg_arch}} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ platform.release_codename }} stable",
        "package_name": "neovim",
    },
}

dpkg_arch = core.run("dpkg --print-architecture", changed=False).output.strip()

if ARGS.package_name is None:
    print("List of available packages:\n\n")
    for key in sorted(packages.keys()):
        print(f"    - {key} {packages[key]['desc']}")

if ARGS.package_name not in packages:
    print(f"ERROR: Unknown package '{ARGS.package_name}'")
    sys.exit(1)

package = packages[ARGS.package_name]


def install_package():
    pyinfra.apt.packages([package["package_name"]], latest=True, update=True)


core.require("root")
core.get_url(
    url=package["key_url"],
    path="/usr/share/keyrings/{{ARGS.package_name}}.gpg",
    skip_if_path_exists=True,
).notify(install_package)
fs.mkfile(
    path="/etc/apt/sources.list.d/{{ARGS.package_name}}.list",
    contents=package["sources"],
).notify(install_package)
